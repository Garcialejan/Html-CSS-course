/* * CSS general de elementos*/
/*Muchos de los parámetros de diseño vienen definidos por el navegador directamente a través del user agent. 
Para formatear y dar estilo a nuestra web debemos modificar dichos parámetros
A través de librerías se puede modificar el user agent para resetear sus parámetros predeterminados. 
Tmb podemos usar el selector universal (*) que aplica lo que definamos a cada uno de los elementos. Aplica sin distinción, sin definir herencias
Este selector tiene una especificidad 0, es decir, cualquier cosa que modifiquemos a posteriori lo va a sobreescribir*/
*{
    margin: 0px;
    padding: 0px;
}
body{
    background-color: #222;
    color: white;
    font-family: "Poppins", sans-serif;
    font-size: 14px;
    font-weight: 200;
    /* * RECOMENDADO: podemos agrupar las tres lineas anteriores en una sola con font: 200 14px "Poppins", sans-serif*/
    /*padding-left: 100px;*/
    /*padding-right: 100px;*/
    /*Establecemos los padding. Colocar el padding en el body tiene ciertas inconvenientes (lo eliminamos dejandolo comentado)
    Por ejemplo, tiene inconvenientes si creamos bordes, ya que también se aplica el padding a estos*/
    /* *Solución: doble definición. Generar una nueva clase con el nombre "sección" y añadirla a los id para evitar este problema.
    Si queremos aplicar un cambio a todos los bloques usamos la clase "sección" y si lo que queremos es aplicar sobre un ID concreto, seleccionamos ese ID en especifico
    Ahora sí, aplicamos el padding a la clase sección (ver más abajo)*/
    
}
/*Estamos atacando directamente a los selectores con este método. Tmb podemos seleccionar por ID o por Class
Si son todos los elementos, seleccionamos por selector, si es solo no seleccionamos por ID, y si son varios, 
definimos una clase y seleccionamos esta-->
/* ! Si definimos dos propiedades para el mismo elemento se elige el último definido. 
   ! Cuidado si tenemos varios CSS para los estilos
   ! Especificidad: se aplica aquella regla que sea más específica*/
h2{
    font-size: 36px;
    line-height: 36px; 
    /*Line-height es un parámetro que defiine en bloque de texto y modifica el tamaño del mismo. 
    Por ejemplo, en una palabra con la letra g o l, vemos que estas letras sobresalen por encima o por debajo y por eso se reserva un espacio
    Con Line-height, podemos definir como queramos que sea ese espacio. Definimos el mismo tamaño que el del texto. 
    Las mayusc no presentan este problema porque todas tienen el mismo tamaño*/
}
h3{ 
    color: #999;
    font-size: 18px;
    font-weight: 500;
}
nav{
    position: fixed; /*Para mantener fija la posición de nuestro navegador en todo momento y que no desaparezca con el scrolling*/
    width: 100%;
    height: 65px; /*Condensamos el tamaño de la barra del navegador*/
    background-color: #222;
    border-bottom: 1px solid white;
    padding-top: 10px;
    text-align: center;
}
nav ul{ /*Aplicamos una combinación de descendientes para que el inlie-block solo afecte a los <ul> correspondientes al navegador y no a los socialmedia. 
    Solo seleccionamos los ul del navegador*/
    display: inline-block; /*El display permite modificar la forma de una caja (block, span, inline...). Usamos inline-block para que permita modificar el tamaño de un inline, que a rpiori no podría hacerse*/
}
nav ul li{
    padding-top: 18px;
}    
section{
    padding: 10px 100px 10px 100px; /*padding-top padding-right padding-bottom padding-left*/
    /*padding-left: 100px;
    padding-right: 100px;
    padding-top: 10px;
    padding-bottom: 10px;*/
}
p{
    text-align: justify; /*justify para alinear sobre ambos bordes un texto*/
}
cite{
    font-weight: 300;
}
i{
    font-size: 30px; /*Aunque sea un icono, no cambiamos height o width, para cambiar su tamaño cambiamos el tamaño de la fuente ya que sino, lo hereda del body*/
} 
i:hover{ /*Pseudo_classes: actúa sobre un selector cuando se produzca un determinado estado*/
    color:#4EB6AA /*Cuando pasemos por encima de los enlaces queremos que se cambie el color de los iconos. Para ello usamos hover*/
}
a{
    text-decoration: none;/*Dentro de la etiqueta <a> la opción de text-decoration esta activada en underline. Podemos descativarlo si queremos*/
    font-weight: 700;
}
a:any-link{ /*Etiqueta que condensa link y visitado*/
    color: white /*Volvemos a formatear a blanco nuestros iconos, ya que debido a la especificidad con los links se ha perdido el formato de color*/
}
a:-webkit-any-link{ /*Añadimos webkit y moz para asegurar que tenemos compatibilidad con cualquier navegador*/
    color:white
}
a:-moz-any-ink{ /*Añadimos webkit y moz para asegurar que tenemos compatibilidad con cualquier navegador*/
    color:white
}
a:hover{
    color:#4EB6AA;
}
ul{
    list-style: none; /*Para eliminar los puntitos que aparecían en la lista <ul> de redes sociales y de la cabecera del navegador*/
}
li{
    float: left; /*Rompemos y flotamos a la izquierda, es decir, se apilan los iconos hacia la derecha. CUANDO UN ELEMENTO FLOTA NO PODEMOS MARCAR EL INLINE-BLOCK*/
    margin-right: 25px; /*Para separar los iconos de socialmedia*/
    /*width: 30px / Sería otra opción*/
}
/* * CSS IDs y Clase*/
/*Definimos el estilo propio de una class que hemos creado dentro de nuestros h3
El punto (.) indica selector de clase
La almohadilla(#) indica selector de ID*/
.hashtag{
    color: white;
    font-size: 26px;
    font-weight: 700;
    -webkit-text-stroke: 1.2px #178073; /*Para añadir un pequeño contorno y que se lea bien*/
}
/*.seccion{ Se queda comentado porque se ha definido para cuando usábamos los div y no el HTML semántico 
    padding: 10px 100px 10px 100px; padding-top padding-right padding-bottom padding-left*/
    /*padding-left: 100px;
    padding-right: 100px;
    padding-top: 10px;
    padding-bottom: 10px;
}*/
.name{
    font-size: 50px;
    line-height: 50px;
    padding-top: 40px;
    padding-bottom: 10px;
    -webkit-text-stroke: 0.4px white;
}
#logo{
    padding-top: 0px;
    margin-right: 42px;
    margin-left: 20px;
}
#socialmedia{
    list-style: none; /*Para eliminar los puntitos que aparecían en la lista <ul> de redes sociales*/
    padding-top: 10px;
    margin-right: 20px;
}
#inicio{
    background-image: url("../images/inicio2.png"); /*Incluimos nuestra imagen de fondo sobre la web*/
    min-height: 275px;
    /*Con este parámetro definimos la altura mínima que queremos que tenga el elemento de bloque que insertamos.
    Si ponemos la altura de nuestra imagen, vemos que el padding superior e inferior del elemento es de 10.
    Por esta razon, aunque nuestra imagen mida de alto 300px, colocamos una altura mínima de 280px para tener en cuenta esos padding del model-box
    Recordar que si es un elemento in-line no podemos actuar sobre su tamaño*/
    background-repeat: no-repeat; /*No queremos que la imagen se repita*/
    background-size: cover; /*Para que la imagen ocupe todo el tamaño. Si la iamgen se recorta y pierde info, con GIMP volvemos a definir la imagen*/
    padding-top: 85px;
}
#portfolio{
    border-top: 3px solid #4EB6AA; /*Generamos un border superior, solido, de 1 px de tamaño y del color definido*/
}
#experiencia{
    background-color: white;
    color: #222;
}
#contacto{
    background-color: #178073;
    border-top: 3px solid #222;
    background-image: url("../images/fondo_contactar.png");
    background-repeat: no-repeat;
    background-position: right;
}
#contacto h3{
    padding-top: 10px;
}

button{
    border-radius: 10px;
}
.masinfo button{
    background-color: #4EB6AA;
    font-weight: 800;
    color: #222;
    padding-left: 15px;
    padding-right: 15px;
}
/* *Grid sobremi*/
#sobremi{
    display: grid;
    grid-template-columns: 250px 1fr; /*Cuantos elementos queremos y además le damos los tamaños a cada una de las columnas.El 1fr indica que el ancho del resto de columjnas será automático*/
    border-top: 2px solid #4EB6AA;
}
#sobremi h2{
    margin-top: 20px;
    margin-bottom: 20px;
}
#sobremi .masinfo{
    margin-top: 20px;
}
#sobremi .masinfo button{
    padding-top: 5px;
    padding-bottom: 5px;
    padding-left: 30px;
    padding-right: 30px;
}
#sobremi #bodysobremi{
    font-size: 16px;
}
#experiencia h2{
    padding-top: 10px;
    padding-bottom: 10px;
}
#experiencia h3{
    padding-bottom: 10px;
}
/* *Card portfolio utilizando FLEX*/
.filaportfolio{
    display: flex; /*Se utiliza para la separación de las cards. Es el estándar de modelo de diseño unidireccional y estaápensado para dimnsiones responsive*/
    flex-direction: row; /*Separación en filas*/
    flex-wrap: wrap; /*Cuando llega al final, realiza un salto de fila*/
    justify-content: space-between; /*Alineación del contenido*/
    gap: 30px 30px;
    margin-bottom: 15px;
    margin-top: 15px;
}
.card{
    width: 350px;
    background-color: #191919;
    border-radius: 15px; /*Para generar bordes radiales sobre nuestras cards*/
}
.card img,.card video,.card iframe{
    border-radius: 15px 15px 0 0;
}
.card h3{
    color: #4EB6AA;
    font-weight: 600;
    font-size: 25px;
}
.card h4{
    margin:0 5px 5px 0;
}
.card h3,.card h4,.card .masinfo{
    padding: 0 15px; /*Padding 0 por arriba y por abajo y 15 por izqs y por derecha*/
}
.card p{
    padding-left: 15px;
    padding-right: 15px;
}
.card .masinfo {
    margin: 15px 0px 15px 0px;
    height: 26px;
}
.card .sep{
    margin: 0 5px 5px 0;
    border: 1px solid #4EB6AA;
}
.card .masinfo button{
    float: right;
}
/* *Card experiencia utilizando GRID y FLEX*/
.gridexp{
    display: grid;
    grid-template-columns: repeat(3, 1fr); /*función repeat para no escribir tanto y tenerlo más automatizado*/
    grid-gap: 10px;
    justify-content: space-between; /*Esto puede ser muy útil si definimos el tamaño por pixeles y no  de forma automática con el 1fr*/
    align-content: space-around;
}
@media (min-width: 400px){ /*Lo utilizamos para hacer un diseño resposive*/
    .gridexp{
        display: flex;
        flex-direction: row;
        flex-wrap: wrap;
        justify-content: center;
        gap: 30px 30px;
        margin-bottom: 15px;
        margin-top: 15px;
    }
}
.cardexp{
    background-color: #222;
    border-radius: 15px;
    color: white;
    padding: 10px 15px;
}
.cardexp h2{
    margin-bottom: 5px;
}
.cardexp h3{
    margin-bottom: 20px;
}
.cardexp p{
    margin-bottom: 20px;
}
.cardexp ul{
    display: flex;
    justify-content: flex-end;
}
.cardexp li{
    height: 30px;
}
/* *Formulario*/
/*Al fin y al cabo, el item formulario es un Grid, por lo que lo podemos formatear como tal*/
.itemform{
    display: grid;
    grid-template-columns: 150px 600px;
    justify-content: center;
    margin-bottom: 20px;/*No usamos el gap porque realmente cada ítem es independiente por como lo hemos creado en el HTML*/
}
.itemform label{
    font-size: 16px;
    font-weight: 700;
}
.itemform input, .itemform textarea{
    border-radius: 10px;
    border: 1px solid #222;
}
input[type= submit]{
    background-color: #222;
    color: white;
    padding: 10px;
    grid-column: 2/3;
    justify-self: end; /*Para alinear al final de las dos columnas ocupadas nuestro elemento de enviar*/
}

/* *footer de la página web*/

footer {
    height: 90px;
    font-weight: 600;
    padding-top: 20px;
    font-size: 16px;
    text-align: center; /* Centra el contenido del footer */
    border-top: 2px solid white;
}
footer ul {
    display: flex; /* Usa un modelo de caja flex para alinear los elementos horizontalmente */
    justify-content: center; /* Centra los elementos horizontalmente */
    align-items: center; /* Centra los elementos verticalmente */
    list-style: none; /* Elimina los puntos de la lista */
}
footer ul li.logo {
    margin-right: 20px; /* Añade un espacio entre el logo y el texto */
}